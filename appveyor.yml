clone_depth: 256

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

environment:
  matrix:
    - PYTHON: "C:\Miniconda36"
    - PYTHON: "C:\Miniconda36-x64"

install:
  - "set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"

  # install
  # latest version of fcswrit
  - "conda install --yes --quiet numpy pip wheel scipy statsmodels"
  # fcswrite
  - "pip install git+git://github.com/ZELLMECHANIK-DRESDEN/fcswrite.git --no-deps"
  # the rest
  - "%PYTHON%\\python.exe -m pip install ."
  # Download ffmpeg binary
  - "%PYTHON%\\Scripts\\imageio_download_bin --package-dir ffmpeg"
  - "%PYTHON%\\python.exe -m pip freeze"

build: off

test_script:
  - "%PYTHON%\\python.exe -m pip install coverage"
  - "%PYTHON%\\python.exe -m pip install codecov"
  - "%PYTHON%\\python.exe -m coverage run --source=dclab ./setup.py test"
  - "%PYTHON%\\python.exe -m coverage report -m"
  # Allow codecov to fail
  - "%PYTHON%\\python.exe -m codecov || exit 0"

after_test:
  # If tests are successful, create a whl package for the project.
  - "%PYTHON%\\python.exe setup.py bdist_wheel"
  - ps: "ls dist"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

